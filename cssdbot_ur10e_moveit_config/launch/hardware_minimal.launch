<launch>
  <arg name="limited" default="false"/>
  <arg name="use_gui" default="false" />
  <arg name="debug" default="false" />
  <arg name="sim" default="true" />
  <arg name="fake_execution" default="false" />

  <!-- Remember to launch ur bring up!-->

  <!-- Load the URDF, SRDF and other .yaml configuration files on the param server -->
  <include file="$(find cssdbot_ur10e_moveit_config)/launch/planning_context.launch">
    <arg name="load_robot_description" value="true"/>
    <arg name="limited" value="$(arg limited)"/>
  </include>

  <!-- Run Rviz and load the default config to see the state of the move_group node -->
  <include file="$(find cssdbot_ur10e_moveit_config)/launch/moveit_rviz.launch">
    <arg name="rviz_config" value="$(find cssdbot_ur10e_moveit_config)/launch/moveit.rviz"/>
    <arg name="debug" value="$(arg debug)"/>
  </include>

  <!-- Run planning execution, essential for hardware to work! -->
  <include file="$(find cssdbot_ur10e_moveit_config)/launch/ur10e_moveit_planning_execution.launch">
    <arg name="limited" value="$(arg limited)"/>
    <arg name="debug" value="$(arg debug)"/>
    <arg name="sim" value="$(arg sim)" />
    <arg name="fake_execution" default="false" />
  </include>

  <!-- I THINK you would need this for hardware. Not too sure!-->
  <!-- I dont think by default there's a robot state publisher given the joint states -->
  <!-- Given the published joint states, publish tf for the robot links -->
  <!--node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true" output="screen" /-->
</launch>